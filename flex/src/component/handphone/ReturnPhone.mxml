<?xml version="1.0" encoding="utf-8"?>
<s:HGroup xmlns:fx="http://ns.adobe.com/mxml/2009" 
		  xmlns:s="library://ns.adobe.com/flex/spark" 
		  xmlns:mx="library://ns.adobe.com/flex/mx"  verticalAlign="middle" gap="10">
	<fx:Metadata>
		[Event(name="validValue", type="lib.CustomEvent")]
	</fx:Metadata>
	<fx:Script>
		<![CDATA[
			import lib.BooleanAndDescriptionVO;
			import lib.CustomEvent;
			import lib.RO;
			import lib.SLibrary;
			
			import mx.collections.ArrayCollection;
			import mx.rpc.events.ResultEvent;
			
			private var ro:RO = new RO();
			private var RO_DESTINATION:String = "WEB";
			private var ac:ArrayCollection = null;
			
			
			// 선택 또는 입력된 회신번호 가져오기
			public function get returnPhone():String {
				
				if (returnPhoneTextInput.selectedIndex < 0) return returnPhoneTextInput.selectedItem as String;
				else return returnPhoneTextInput.selectedItem.phone as String;
			}
			
			// 사용자 리스트 가져오기
			public function getList():void {
				ro.set(RO_DESTINATION, getList_ResultEventHandler);
				ro.method.getReturnPhone();
			}
			private function getList_ResultEventHandler(event:ResultEvent):void {
				
				ac = event.result as ArrayCollection;
				if (ac != null && ac.length > 0) {
					returnPhoneTextInput.dataProvider = ac;
					returnPhoneTextInput.selectedIndex = 0;
				}
			}
			
			// 기본설정 요청
			public function setDef(idx:int):void {
				
				if (idx == 0) { ExternalInterface.call("alert","선택된 인덱스가 없습니다."); return; }
				
				ro.set(RO_DESTINATION, setDef_ResultEventHandler);
				ro.method.setReturnPhoneTimeWrite(idx);
			}
			private function setDef_ResultEventHandler(event:ResultEvent):void {
				
				var bvo:BooleanAndDescriptionVO = event.result as BooleanAndDescriptionVO;
				if (bvo.bResult) { ExternalInterface.call("alert","설정되었습니다."); callLater(getList); }
				else ExternalInterface.call("alert",bvo.strDescription );
			}
			
			// 삭제 요청
			public function deletePhone(idx:int):void {
				
				if (idx == 0) { ExternalInterface.call("alert","선택된 인덱스가 없습니다."); return; }
				
				ro.set(RO_DESTINATION, deletePhone_ResultEventHandler);
				ro.method.deleteReturnPhone(idx);
			}
			private function deletePhone_ResultEventHandler(event:ResultEvent):void {
				
				var bvo:BooleanAndDescriptionVO = event.result as BooleanAndDescriptionVO;
				if (bvo.bResult) { ExternalInterface.call("alert","삭제되었습니다."); callLater(getList); }
				else ExternalInterface.call("alert",bvo.strDescription );
			}

			protected function returnPhoneTextInput_keyUpHandler(event:KeyboardEvent):void
			{
				dispatchEvent(new CustomEvent("validValue", null));
			}
			
			

			protected function saveReturnBtn_clickHandler(event:MouseEvent):void
			{
				var phone:String = this.returnPhone;
				if (phone == "") { ExternalInterface.call("alert","회신번호를 입력하세요."); return; }
				ro.set(RO_DESTINATION, submit_ResultEventHandler);
				ro.method.setReturnPhone( this.returnPhone );	
			}
			
			private function submit_ResultEventHandler(event:ResultEvent):void {
				
				var bVO:BooleanAndDescriptionVO = event.result as BooleanAndDescriptionVO;
				if (bVO.bResult) {
					SLibrary.alert("저장 되었습니다.");
					callLater(getList);
				} else {
					SLibrary.alert("회신번호 저장 실패.");
				}
			}
			
			protected function combobox1_renderHandler(event:Event):void
			{
				// TODO Auto-generated method stub
				
			}
			
		]]>
	</fx:Script>
	<fx:Declarations>
		<!-- Place non-visual elements (e.g., services, value objects) here -->
	</fx:Declarations>
	<s:Label text="보낸사람" fontSize="12" color="0x6D6D6D" fontWeight="bold"/>
	<s:ComboBox id="returnPhoneTextInput" restrict="0-9" borderColor="#bbbbbb" labelField="phone"  width="129" itemRenderer="renderer.ComboBoxRenderer" change="returnPhoneTextInput_keyUpHandler(null)" />
	<!--<s:TextInput id="returnPhoneTextInput" height="20"  width="125" keyUp="returnPhoneTextInput_keyUpHandler(event)"/>-->
	<s:Image id="saveReturnBtn" click="saveReturnBtn_clickHandler(event)" source="images/h_save2.gif" buttonMode="true" useHandCursor="true" />
</s:HGroup>
